{"version":3,"file":"static/js/movies-view.659575f9.chunk.js","mappings":"sLAEaA,E,QAAYC,EAAAA,GAAH,qL,SCCP,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,SAACH,EAAD,UAAYG,M,0MCFfC,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA+BC,EAA/B,+BAAqC,GAAIC,EAAzC,+BAAkD,GAAlD,kBAE2BC,IAAAA,IAAUF,EAAKC,GAF1C,cAEUE,EAFV,yBAGWA,GAHX,gCAKIC,QAAQC,IAAI,KAAMC,SAClBC,QAAQC,OAAO,IAAIC,MAAM,cAN7B,iFAUO,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQX,EAAgB,GAAD,OACvBF,EADuB,uCACgBC,IAFvC,0GAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQb,EAAgB,GAAD,OACvBF,EADuB,iCACUC,EADV,iCAC0Cc,EAD1C,gCADvB,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,oBACchB,EADd,oBADvB,0GAMA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,4BACsBhB,EADtB,oBADvB,0GAMA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,4BACsBhB,EADtB,oBADvB,4G,oLCrCMmB,EAAYvB,EAAAA,EAAAA,KAAH,8KAUTwB,EAAiBxB,EAAAA,EAAAA,MAAH,4PAgBdyB,EAAezB,EAAAA,EAAAA,OAAH,uPAeZ0B,EAAoB1B,EAAAA,EAAAA,KAAH,6M,SChCf,SAAS2B,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOX,EAAP,KAAoBY,EAApB,KAiBA,OACE,UAACP,EAAD,CAAWK,SAPI,SAAAG,GACfA,EAAIC,iBACJJ,EAASV,GAVTY,EAAe,KAef,WACE,SAACN,EAAD,CACES,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOpB,EACPqB,SApBgB,SAAAR,GACpB,IAAMS,EAAsBT,EAAIU,cAAcH,MAAMI,cAAcC,OAClEb,EAAeU,OAoBb,UAACf,EAAD,CAAcQ,KAAK,SAAS,aAAW,gBAAvC,WACE,SAAC,cAAD,CAAsBK,MAAO,CAAEM,KAAM,SAArC,UACE,SAAC,MAAD,OAEF,SAAClB,EAAD,2BCpCO,SAASmB,IACtB,OAAsChB,EAAAA,EAAAA,UAAS,IAA/C,eAAOX,EAAP,KAAoBY,EAApB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACMC,ECTO,SAAqBV,GAClC,IAAMW,GAAMC,EAAAA,EAAAA,UAIZ,OAHAC,EAAAA,EAAAA,YAAU,WACRF,EAAIG,QAAUd,KAETW,EAAIG,QDIaC,CAAYnC,IAEpCiC,EAAAA,EAAAA,YAAU,WACHjC,IAILD,EAAAA,EAAAA,IAAiBC,GACdoC,MAAK,SAAA7C,GACJ,IEAwB8C,EFAxB,EAAmC9C,EAAS+C,KAApCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,cAEjB,GAAsB,IAAlBA,EAGF,OECwB,SAAAxC,IAChCyC,EAAAA,EAAAA,IAAM,oDAAD,OACiDzC,EADjD,2CAEH,CACE0C,KAAM,mCFPFC,CAA0B3C,QAC1B4C,IEJsBP,EFQAG,GEP9BC,EAAAA,EAAAA,IAAM,oBAAD,OAAqBJ,EAArB,oBAAqD,CACxDK,KAAM,iBFOFb,EAAUU,MAEXM,OAAM,SAAAC,GACL,OEGsB,SAAAA,IAC5BL,EAAAA,EAAAA,IAAM,mCAAD,OAAoCK,EAAMpD,QAA1C,KAAsD,CACzDgD,KAAM,iBFLKC,CAAsBG,QAEhC,CAAC9C,IAEJ,IAAM4C,EAAc,WAClBf,EAAU,KAkBZ,OACE,iCACE,SAAC9C,EAAA,EAAD,CAAaC,KAAK,YAClB,SAACyB,EAAD,CAAYC,SAlBK,SAAAV,GACC,KAAhBA,EAKA8B,IAAoB9B,GAKxBY,EAAeZ,GACf4C,KEzCiC,SAAA5C,IACnCyC,EAAAA,EAAAA,IAAM,uDAAD,OACoDzC,EADpD,MAEH,CACE0C,KAAM,mCFgCNC,CAA6B3C,IE5CjCyC,EAAAA,EAAAA,IACE,0FACA,CACEC,KAAM,uCFqDN,wBACGd,EAAOmB,OAAS,GACfnB,EAAOoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,eAAaD,GAAIA,EAAjB,UACE,SAAC,KAAD,CAAME,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD","sources":["components/PageHeading/PageHeading.slyled.jsx","components/PageHeading/PageHeading.jsx","services/moviesApi.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","views/MoviesPageView/MoviesPageView.jsx","hooks/usePrevious.jsx","utils/notifications.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  padding: 30px 0;\n  line-height: 58px;\n  letter-spacing: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 56px;\n  color: #2a2a2a;\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './PageHeading.slyled';\n\nexport default function PageHeading({ text }) {\n  return <PageTitle>{text}</PageTitle>;\n}\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f3b565dfa705a44083795264ed307ec';\n\nasync function fetchMoviesData(url = '', config = {}) {\n  try {\n    const response = await axios.get(url, config);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n    Promise.reject(new Error('Not found'));\n  }\n}\n\nexport async function fetchTrendingMovies() {\n  return await fetchMoviesData(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchSearchMovie(searchQuery) {\n  return await fetchMoviesData(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const QueryForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const QueryFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const QueryFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const QueryFormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { IconContext } from 'react-icons';\nimport { MdSearch } from 'react-icons/md';\nimport {\n  QueryForm,\n  QueryFormInput,\n  QueryFormBtn,\n  QueryFormBtnLabel,\n} from './SearchForm.styled';\n\nexport default function SearchForm({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const formReset = () => {\n    setSearchQuery('');\n  };\n\n  const onInputChange = evt => {\n    const normalizeInputValue = evt.currentTarget.value.toLowerCase().trim();\n    setSearchQuery(normalizeInputValue);\n  };\n\n  const onSearch = evt => {\n    evt.preventDefault();\n    onSubmit(searchQuery);\n    formReset();\n  };\n\n  return (\n    <QueryForm onSubmit={onSearch}>\n      <QueryFormInput\n        type=\"text\"\n        name=\"search\"\n        autocomplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={searchQuery}\n        onChange={onInputChange}\n      />\n      <QueryFormBtn type=\"submit\" aria-label=\"Search movies\">\n        <IconContext.Provider value={{ size: '2.5em' }}>\n          <MdSearch />\n        </IconContext.Provider>\n        <QueryFormBtnLabel>Search</QueryFormBtnLabel>\n      </QueryFormBtn>\n    </QueryForm>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport usePrevious from 'hooks/usePrevious';\nimport { Link } from 'react-router-dom';\nimport { fetchSearchMovie } from 'services/moviesApi';\nimport * as notify from 'utils/notifications';\nimport PageHeading from 'components/PageHeading';\nimport SearchForm from 'components/SearchForm';\n\nexport default function MoviesPageView() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const prevSearchQuery = usePrevious(searchQuery);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchSearchMovie(searchQuery)\n      .then(response => {\n        const { results, total_results } = response.data;\n\n        if (total_results === 0) {\n          notify.showIncorrectQuery(searchQuery);\n          moviesReset();\n          return;\n        }\n\n        notify.showSearchResult(total_results);\n        setMovies(results);\n      })\n      .catch(error => {\n        return notify.showQueryError(error);\n      });\n  }, [searchQuery]);\n\n  const moviesReset = () => {\n    setMovies([]);\n  };\n\n  const onFormSubmit = searchQuery => {\n    if (searchQuery === '') {\n      notify.showSearchQueryAbsence();\n      return;\n    }\n\n    if (prevSearchQuery === searchQuery) {\n      notify.showSearchQueryRepeat(searchQuery);\n      return;\n    }\n\n    setSearchQuery(searchQuery);\n    moviesReset();\n  };\n\n  return (\n    <>\n      <PageHeading text=\"Movies\" />\n      <SearchForm onSubmit={onFormSubmit} />\n      <ul>\n        {movies.length > 0 &&\n          movies.map(({ id, title }) => (\n            <li key={id} id={id}>\n              <Link to={`/movies/${id}`}>{title}</Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import toast from 'react-hot-toast';\n\nexport const showSearchQueryAbsence = () => {\n  toast(\n    'No, no, no! God, no! To search for movies you need to specify what you are looking for.',\n    {\n      icon: '🤦‍♂️',\n    }\n  );\n};\n\nexport const showSearchQueryRepeat = searchQuery => {\n  toast(\n    `Bro, you already found all the movies on the query \"${searchQuery}\".`,\n    {\n      icon: '🙅‍♂️',\n    }\n  );\n};\n\nexport const showSearchResult = totalResults => {\n  toast(`Hooray! We found ${totalResults} movies for you.`, {\n    icon: '🤟',\n  });\n};\n\nexport const showIncorrectQuery = searchQuery => {\n  toast(\n    `Sorry, there are no movies matching your query: \"${searchQuery}\". Please try to search something else.`,\n    {\n      icon: '🤷‍♂️',\n    }\n  );\n};\n\nexport const showQueryError = error => {\n  toast(`You caught the following error: ${error.message}.`, {\n    icon: '🐷',\n  });\n};\n"],"names":["PageTitle","styled","PageHeading","text","BASE_URL","API_KEY","fetchMoviesData","url","config","axios","response","console","log","message","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","QueryForm","QueryFormInput","QueryFormBtn","QueryFormBtnLabel","SearchForm","onSubmit","useState","setSearchQuery","evt","preventDefault","type","name","autocomplete","autoFocus","placeholder","value","onChange","normalizeInputValue","currentTarget","toLowerCase","trim","size","MoviesPageView","movies","setMovies","prevSearchQuery","ref","useRef","useEffect","current","usePrevious","then","totalResults","data","results","total_results","toast","icon","notify","moviesReset","catch","error","length","map","id","title","to"],"sourceRoot":""}