{"version":3,"file":"static/js/140.3ac5d034.chunk.js","mappings":"4TAEMA,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA+BC,EAA/B,+BAAqC,GAAIC,EAAzC,+BAAkD,GAAlD,kBAE2BC,IAAAA,IAAUF,EAAKC,GAF1C,cAEUE,EAFV,yBAGWA,GAHX,gCAKIC,QAAQC,IAAI,KAAMC,SAClBC,QAAQC,OAAO,IAAIC,MAAM,cAN7B,iFAUO,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQX,EAAgB,GAAD,OACvBF,EADuB,uCACgBC,IAFvC,0GAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQb,EAAgB,GAAD,OACvBF,EADuB,iCACUC,EADV,iCAC0Cc,EAD1C,gCADvB,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,oBACchB,EADd,oBADvB,0GAMA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,4BACsBhB,EADtB,oBADvB,0GAMA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,4BACsBhB,EADtB,oBADvB,4G,sHCnCQ,SAASmB,IACtB,IAAMH,GAAYI,EAAAA,EAAAA,MAAZJ,QACN,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAkBF,GAASS,MAAK,SAAApB,GAAQ,OACtCkB,EAAWlB,EAASqB,KAAKC,cAE1B,CAACX,IACJV,QAAQC,IAAIe,IAGV,wBACGA,EAAQM,OAAS,GAChBN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,uBAAID,KACJ,uBAAIC,MAFGF","sources":["services/moviesApi.jsx","views/ReviewsView/ReviewsView.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f3b565dfa705a44083795264ed307ec';\n\nasync function fetchMoviesData(url = '', config = {}) {\n  try {\n    const response = await axios.get(url, config);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n    Promise.reject(new Error('Not found'));\n  }\n}\n\nexport async function fetchTrendingMovies() {\n  return await fetchMoviesData(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchSearchMovie(searchQuery) {\n  return await fetchMoviesData(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/moviesApi';\n\nexport default function ReviewsView() {\n  let { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(response =>\n      setReviews(response.data.results)\n    );\n  }, [movieId]);\n  console.log(reviews);\n\n  return (\n    <ul>\n      {reviews.length > 0 &&\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>{author}</p>\n            <p>{content}</p>\n          </li>\n        ))}\n    </ul>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchMoviesData","url","config","axios","response","console","log","message","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","ReviewsView","useParams","useState","reviews","setReviews","useEffect","then","data","results","length","map","id","author","content"],"sourceRoot":""}