{"version":3,"file":"static/js/home-view.c28af123.chunk.js","mappings":"oLAEaA,E,QAAYC,EAAAA,GAAH,qL,SCCP,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,SAACH,EAAD,UAAYG,M,0MCFfC,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA+BC,EAA/B,+BAAqC,GAAIC,EAAzC,+BAAkD,GAAlD,kBAE2BC,IAAAA,IAAUF,EAAKC,GAF1C,cAEUE,EAFV,yBAGWA,GAHX,gCAKIC,QAAQC,IAAI,KAAMC,SAClBC,QAAQC,OAAO,IAAIC,MAAM,cAN7B,iFAUO,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQX,EAAgB,GAAD,OACvBF,EADuB,uCACgBC,IAFvC,0GAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQb,EAAgB,GAAD,OACvBF,EADuB,iCACUC,EADV,iCAC0Cc,EAD1C,gCADvB,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,oBACchB,EADd,oBADvB,0GAMA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,4BACsBhB,EADtB,oBADvB,0GAMA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,iFACQf,EAAgB,GAAD,OACvBF,EADuB,kBACLiB,EADK,4BACsBhB,EADtB,oBADvB,4G,gJCrCMmB,EAAavB,EAAAA,EAAAA,GAAH,wRAaVwB,EAAYxB,EAAAA,EAAAA,GAAH,+RAWTyB,EAAWzB,EAAAA,EAAAA,IAAH,gF,SCpBN,SAAS0B,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,MAAsBe,MAAK,SAAAtB,GAAQ,OAAIoB,EAAUpB,EAASuB,KAAKC,cAC9D,KAGD,iCACE,SAAChC,EAAA,EAAD,CAAaC,KAAK,oBAClB,SAACqB,EAAD,UACGK,EAAOM,OAAS,GACfN,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,aAA3B,OACT,SAACf,EAAD,CAAoBY,GAAIA,EAAxB,UACE,UAAC,KAAD,CAAMI,GAAE,kBAAaJ,GAArB,WACE,SAACX,EAAD,CACEgB,IAAG,yCAAoCJ,GACvCK,IAAKJ,KAEP,wBAAKA,KACL,0BAAOC,QAPKH","sources":["components/PageHeading/PageHeading.slyled.jsx","components/PageHeading/PageHeading.jsx","services/moviesApi.jsx","views/HomePageView/HomePageView.styled.jsx","views/HomePageView/HomePageView.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  padding: 30px 0;\n  line-height: 58px;\n  letter-spacing: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 56px;\n  color: #2a2a2a;\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './PageHeading.slyled';\n\nexport default function PageHeading({ text }) {\n  return <PageTitle>{text}</PageTitle>;\n}\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f3b565dfa705a44083795264ed307ec';\n\nasync function fetchMoviesData(url = '', config = {}) {\n  try {\n    const response = await axios.get(url, config);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n    Promise.reject(new Error('Not found'));\n  }\n}\n\nexport async function fetchTrendingMovies() {\n  return await fetchMoviesData(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchSearchMovie(searchQuery) {\n  return await fetchMoviesData(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'services/moviesApi';\nimport PageHeading from 'components/PageHeading';\nimport { MoviesList, MovieItem, MovieImg } from './HomePageView.styled';\n\nexport default function HomePageView() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(response => setMovies(response.data.results));\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Trending today\" />\n      <MoviesList>\n        {movies.length > 0 &&\n          movies.map(({ id, poster_path, title, vote_average }) => (\n            <MovieItem key={id} id={id}>\n              <Link to={`/movies/${id}`}>\n                <MovieImg\n                  src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                  alt={title}\n                />\n                <h3>{title}</h3>\n                <span>{vote_average}</span>\n              </Link>\n            </MovieItem>\n          ))}\n      </MoviesList>\n    </>\n  );\n}\n"],"names":["PageTitle","styled","PageHeading","text","BASE_URL","API_KEY","fetchMoviesData","url","config","axios","response","console","log","message","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","MoviesList","MovieItem","MovieImg","HomePageView","useState","movies","setMovies","useEffect","then","data","results","length","map","id","poster_path","title","vote_average","to","src","alt"],"sourceRoot":""}